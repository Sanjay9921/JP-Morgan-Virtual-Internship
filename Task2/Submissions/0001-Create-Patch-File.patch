From 2f36d7e1c9868e28cd3e6678fe11814866c7f4fb Mon Sep 17 00:00:00 2001
From: "K. Sanjay Prabhu" <sanjayprabhu1999@gmail.com>
Date: Wed, 15 Jul 2020 13:15:17 +0530
Subject: [PATCH] Create Patch File

---
 src/App.tsx   | 12 ++++++++++--
 src/Graph.tsx | 13 +++++++++++--
 2 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..49bdb05 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,7 +31,10 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+  	if(this.state.showGraph)
+  	{
+  		return (<Graph data={this.state.data}/>)
+  	}
   }
 
   /**
@@ -39,7 +44,10 @@ class App extends Component<{}, IState> {
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
       // Update the state by creating a new array of data that consists of
       // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
+      this.setState({ 
+      data: serverResponds,
+      showGraph: true,
+       });
     });
   }
 
diff --git a/src/Graph.tsx b/src/Graph.tsx
index ec1430e..71d1f68 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement{
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -49,6 +49,15 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.setAttribute('view','y_line');
+      elem.setAttribute('column-pivots','["stock"]');
+      elem.setAttribute('row-pivots','["timestamp"]');
+      elem.setAttribute('columns','["top_ask_price"]');
+      elem.setAttribute('aggregates',
+      `{"stock":"distinct count",
+       "top_ask_price":"avg",
+       "top_bid_price":"avg",
+       "timestamp":"distinct count"}`);
     }
   }
 
-- 
2.27.0.windows.1

